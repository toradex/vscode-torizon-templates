name: Build & Deploy TorizonCore
on:
  - push

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    name: Build & Deploy TorizonCore
    container: ubuntu:23.10
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: cache
        with:
          path: storage/
          key: tcb
      - name: Set abs-path file
        run: |
          echo "${{ github.workspace }}" >> abs-path
          cat abs-path
      - name: Install build tools in container
        run: | 
          apt-get update
          apt-get install -y wget curl libicu-dev
          curl -fsSL https://get.docker.com -o get-docker.sh 
          sh get-docker.sh
                    
          wget -nv https://github.com/PowerShell/PowerShell/releases/download/v7.4.2/powershell_7.4.2-1.deb_amd64.deb
          dpkg -i powershell_7.4.2-1.deb_amd64.deb

      - name: Initial Setup
        shell: bash
        env:
          PLATFORM_CREDENTIALS: ${{ secrets.PLATFORM_CREDENTIALS }}
        run: |
          echo $PLATFORM_CREDENTIALS | base64 -d > credentials.zip

      - name: Build TorizonCore Image
        shell: pwsh
        run: |
          ./.vscode/tasks.ps1 run tcb-setup
          ./.vscode/tasks.ps1 run tcb-build

      - name: Push OS Package to Platform
        shell: pwsh
        env:
          PLATFORM_CLIENT_ID: ${{ secrets.PLATFORM_CLIENT_ID }}
          PLATFORM_CLIENT_SECRET: ${{ secrets.PLATFORM_CLIENT_SECRET }}
        run: |
          ./.vscode/tasks.ps1 run tcb-setup
          ./.vscode/tasks.ps1 run tcb-unpack
          ./.vscode/tasks.ps1 run tcb-platform-push-ostree

      - name: Deploy to Fleet
        shell: pwsh
        env:
          TASKS_OVERRIDE_ENV: "False"
          PLATFORM_CLIENT_ID: ${{ secrets.PLATFORM_CLIENT_ID }}
          PLATFORM_CLIENT_SECRET: ${{ secrets.PLATFORM_CLIENT_SECRET }}
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          ./.vscode/tasks.ps1 run platform-update-fleet
