{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "open-mono-designer",
            "detail": "Open the project on the Mono Designer (experimental and buggy)",
            "command": "mono",
            "type": "process",
            "args": [
                "${workspaceFolder}/.conf/mwf-designer/mwf-designer.exe",
                "${file}"
            ],
            "dependsOrder": "sequence",
            "isBackground": true,
            "problemMatcher": "$msCompile",
            "icon": {
                "id": "eye",
                "color": "terminal.ansiYellow"
            }
        },
        {
            "label": "build-debug",
            "detail": "Builds the project using the msbuild",
            "command": "msbuild",
            "type": "process",
            "args": [],
            "dependsOrder": "sequence",
            "problemMatcher": "$msCompile",
            "icon": {
                "id": "flame",
                "color": "terminal.ansiYellow"
            }
        },
        {
            "label": "build-debug-arm",
            "detail": "",
            "hide": true,
            "command": "msbuild",
            "type": "process",
        "args": [],
            "dependsOrder": "sequence",
            "problemMatcher": "$msCompile",
            "icon": {
                "id": "flame",
                "color": "terminal.ansiYellow"
            }
        },
        {
            "label": "run-mono-debug-server-arm",
            "detail": "",
            "hide": true,
            "command": "ssh",
            "type": "process",
            "args": [
                "-i",
                "${workspaceFolder}/.conf/id_rsa",
                "-p",
                "${config:torizon_debug_ssh_port}",
                "-o",
                "UserKnownHostsFile=/dev/null",
                "-o",
                "StrictHostKeyChecking=no",
                "${config:torizon_run_as}@${config:torizon_ip}",
                "cd ${config:torizon_app_root} && mono --debug --debugger-agent=transport=dt_socket,server=y,address=0.0.0.0:${config:torizon_debug_port} __change__.exe > out.log 2> err.log &"
            ],
            "dependsOn": [
                "validate-settings",
                "validate-arch-arm",
                "copy-docker-compose",
                "pre-cleanup",
                "build-debug",
                "build-container-torizon-debug-arm",
                "push-container-torizon-debug-arm",
                "pull-container-torizon-debug-arm",
                "run-container-torizon-debug-arm",
            ],
            "dependsOrder": "sequence",
            "problemMatcher": "$msCompile",
            "icon": {
                "id": "flame",
                "color": "terminal.ansiYellow"
            }
        },
        {
            "label": "run-mono-debug-server-arm64",
            "detail": "",
            "hide": true,
            "command": "ssh",
            "type": "process",
            "args": [
                "-i",
                "${workspaceFolder}/.conf/id_rsa",
                "-p",
                "${config:torizon_debug_ssh_port}",
                "-o",
                "UserKnownHostsFile=/dev/null",
                "-o",
                "StrictHostKeyChecking=no",
                "${config:torizon_run_as}@${config:torizon_ip}",
                "cd ${config:torizon_app_root} && mono --debug --debugger-agent=transport=dt_socket,server=y,address=0.0.0.0:${config:torizon_debug_port} __change__.exe > out.log 2> err.log &"
            ],
            "dependsOn": [
                "validate-settings",
                "validate-arch-arm64",
                "copy-docker-compose",
                "pre-cleanup",
                "build-debug",
                "build-container-torizon-debug-arm64",
                "push-container-torizon-debug-arm64",
                "pull-container-torizon-debug-arm64",
                "run-container-torizon-debug-arm64",
            ],
            "dependsOrder": "sequence",
            "problemMatcher": "$msCompile",
            "icon": {
                "id": "flame",
                "color": "terminal.ansiYellow"
            }
        },
        {
            "label": "run-mono-debug-server-amd64",
            "detail": "",
            "hide": true,
            "command": "ssh",
            "type": "process",
            "args": [
                "-i",
                "${workspaceFolder}/.conf/id_rsa",
                "-p",
                "${config:torizon_debug_ssh_port}",
                "-o",
                "UserKnownHostsFile=/dev/null",
                "-o",
                "StrictHostKeyChecking=no",
                "${config:torizon_run_as}@${config:torizon_ip}",
                "cd ${config:torizon_app_root} && mono --debug --debugger-agent=transport=dt_socket,server=y,address=0.0.0.0:${config:torizon_debug_port} __change__.exe > out.log 2> err.log &"
            ],
            "dependsOn": [
                "validate-settings",
                "validate-arch-amd64",
                "copy-docker-compose",
                "pre-cleanup",
                "build-debug",
                "build-container-torizon-debug-amd64",
                "push-container-torizon-debug-amd64",
                "pull-container-torizon-debug-amd64",
                "run-container-torizon-debug-amd64",
            ],
            "dependsOrder": "sequence",
            "problemMatcher": "$msCompile",
            "icon": {
                "id": "flame",
                "color": "terminal.ansiYellow"
            }
        },
        {
            "label": "install-nuget",
            "detail": "This task will install the Nuget package from https://www.nuget.org/. Please input the name and version.",
            "hide": false,
            "command": "nuget",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "args": [
                "install",
                "${input:nuget-name}",
                "-Version",
                "${input:nuget-version}",
                "-Framework", "${input:target-framework}",
                "-OutputDirectory", "libs"
            ],
            "problemMatcher": [
                "$tsc"
            ],
            "icon": {
                "id": "insert",
                "color": "terminal.ansiYellow"
            }
        }
    ],
    "inputs": [
        {
            "id": "nuget-name",
            "type": "promptString",
            "description": "Nuget package name"
        },
        {
            "id": "nuget-version",
            "type": "promptString",
            "description": "Nuget package version"
        },
        {
            "id": "target-framework",
            "type": "pickString",
            "description": "Choose the target framework",
            "default": "",
            "options": [
                "netstandard2.0",
                "net472",
                "net471",
                "net47",
                "net463",
                "net462",
                "net461"
            ]
        }
    ]
}
